
# ad-s2
# 2-10 change type into factor
getwd()
fin <- read.csv(file.choose())
str(fin)
head(fin)
fin$ID <- factor(fin$ID)
fin$Inception <- factor(fin$Inception)

# 2-11 change factor into numeric
character.vec1 <- c("10","20","30","10")
num.vec1 <- as.numeric(character.vec1)
# factor到numeric不能直接转 直接转过去的是factor的level 就是排序
factor.vec1 <- factor(c("10","20","30","10"))
num.vec2 <- as.numeric(as.character(factor.vec1))
typeof(num.vec2)

# 2-13 gsub() sub()
?gsub
# gsub(被取代的对象，取代的内容，列)。“$”符号特殊处理，当被取代对象时，加"\\$"
fin$Expenses <- gsub("Dollars","",fin$Expenses)
fin$Expenses <- gsub(",","",fin$Expenses)
fin$Revenue <- gsub("\\$", "", fin$Revenue)
fin$Revenue <- gsub(",","",fin$Revenue)
fin$Growth <- gsub("%","",fin$Growth)

fin$Expenses <- as.numeric(fin$Expenses)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Growth <- as.numeric(fin$Growth)
str(fin)

# 2-16 missing data
# step1. change all blanks to "NA"
fin <- read.csv(file.choose(), na.strings = c(""))
head(fin, 24)
# step2. locate all NA data
fin[!complete.cases(fin),]

# 2-18 NA filter
# 用which当filter 可以滤出指定的不带NA的row
fin[which(fin$Revenue == 9684527),]

# 用is.na()当filter 可以滤出指定的只带NA的row
fin[is.na(fin$Expenses),]

# 2-19 remove NA rows
# 先建一个backup 以防remove错了
finbackup <- fin
# 再建！is.na()子集，重新assign到原dataset
fin <- fin[!is.na(fin$Industry),]
head(fin, 20)

# 2-20 reset rownames
# 删掉两行后 rowname是不变的 如果想要手动改 有两种方法
# 方法一 指定名字
rownames(fin) <- 1:nrow(fin)
head(fin, 20)
# 方法二 取消rowname
rownames(fin) <- NULL
head(fin, 20)

# 2-21 replace charactor missing data
# 过滤出需要replace的row，然后指定列，最后指定更换内容
fin[is.na(fin$State) & fin$City == "New York", "State"] <- "NY"
fin[is.na(fin$State) & fin$City == "San Francisco", "State"] <- "CA"

fin[c(82, 265),]
fin[!complete.cases(fin),]

# 2-22, 23, 24 用median取代NA
# step1. 计算指定行的median
median_empl_retail <- median(fin[fin$Industry == "Retail","Employees"], na.rm = TRUE)
median_empl_retail
# step2. 用median取代NA
fin[is.na(fin$Employees) & fin$Industry=="Retail","Employees"] <- median_empl_retail
fin[c(3),]

fin[is.na(fin$Employees),]
median_empl_finser <- median(fin[fin$Industry=="Financial Services","Employees"], na.rm = TRUE)
median_empl_finser
fin[is.na(fin$Employees) & fin$Industry=="Financial Services", "Employees"] <- median_empl_finser
fin[c(330),]

fin[!complete.cases(fin),]
median_growth_const <- median(fin[fin$Industry == "Construction","Growth"], na.rm = TRUE)
median_growth_const
fin[is.na(fin$Growth), "Growth"] <- median_growth_const
fin[8,]

median_reve_const <- median(fin[fin$Industry == "Construction", "Revenue"], na.rm = TRUE)
median_reve_const
fin[c(8,42), "Revenue"] <- median_reve_const
fin[c(8, 42),]

median_exp_const <- median(fin[fin$Industry == "Construction", "Expenses"], na.rm = TRUE)
median_exp_const
fin[c(8, 42), "Expenses"] <-median_exp_const
fin[c(8, 42),]

# 2-25 通过两列计算获得第三列NA值
fin[is.na(fin$Profit), "Profit"] <- fin[is.na(fin$Profit), "Revenue"] - fin[is.na(fin$Profit), "Expenses"]
fin[c(8,42),]

fin[is.na(fin$Expenses), "Expenses"] <- fin[is.na(fin$Expenses),"Revenue"] - fin[is.na(fin$Expenses),"Profit"]
fin[15,]

fin[!complete.cases(fin),]

# 2-26 visualize
library(ggplot2)
fin_plot <- ggplot(data = fin, aes(x=Revenue, y=Expenses, color=Industry)) 
fin_plot + geom_point(aes(size=Profit))

fin_plot + geom_point(aes(size=Profit)) + geom_smooth(fill=NA, size = 1.2)

fin_plot + geom_jitter() + geom_boxplot(alpha=0.5)




